// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using hometask_crud.AppDbContex;

#nullable disable

namespace hometask_crud.Migrations
{
    [DbContext(typeof(ApplicationDbContex))]
    [Migration("20240731153626_mig1")]
    partial class mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("hometask_crud.Model.Author", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("authors1");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Daniel",
                            LastName = "Defoe"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Lewis",
                            LastName = "Carroll"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Veda",
                            LastName = "Vyas"
                        });
                });

            modelBuilder.Entity("hometask_crud.Model.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Page")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("CategoryId");

                    b.ToTable("books1");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AuthorId = 1,
                            CategoryId = 1,
                            Name = "Adventures of Robinson Crusoe",
                            Page = "100"
                        },
                        new
                        {
                            Id = 2,
                            AuthorId = 2,
                            CategoryId = 2,
                            Name = "Alice in Wonderland",
                            Page = "150"
                        },
                        new
                        {
                            Id = 3,
                            AuthorId = 3,
                            CategoryId = 3,
                            Name = "Bhagwat Gita",
                            Page = "300"
                        });
                });

            modelBuilder.Entity("hometask_crud.Model.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("categories1");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Non-Fiction"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Poems"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Western"
                        });
                });

            modelBuilder.Entity("hometask_crud.Model.Book", b =>
                {
                    b.HasOne("hometask_crud.Model.Author", "author")
                        .WithMany("books")
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("hometask_crud.Model.Category", "category")
                        .WithMany("books")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("author");

                    b.Navigation("category");
                });

            modelBuilder.Entity("hometask_crud.Model.Author", b =>
                {
                    b.Navigation("books");
                });

            modelBuilder.Entity("hometask_crud.Model.Category", b =>
                {
                    b.Navigation("books");
                });
#pragma warning restore 612, 618
        }
    }
}
